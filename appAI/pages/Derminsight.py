import streamlit as st
import utils as utl
from pathlib import Path
from PIL import Image
import numpy as np
import tensorflow as tf
from tensorflow.keras.models import load_model
import cv2
import base64
import streamlit.components.v1 as components


st.set_page_config(
    page_title="DERM INSIGHT APP",
    page_icon="üßä",
    layout="wide",
)
utl.local_css("streamlit.css")


# H√†m chuy·ªÉn h√¨nh ·∫£nh sang bytes v√† m√£ h√≥a base64
def img_to_bytes(img_path):
    img_bytes = Path(img_path).read_bytes()
    encoded = base64.b64encode(img_bytes).decode()
    return encoded

# H√†m t·∫°o HTML cho h√¨nh ·∫£nh ƒë√£ m√£ h√≥a base64
def img_to_html(img_path, width="100px", height="80px"):
    img_html = f"<img src='data:image/png;base64,{img_to_bytes(img_path)}' style='width:{width}; height:{height};'>"
    return img_html

# S·ª≠ d·ª•ng h√†m img_to_html ƒë·ªÉ m√£ h√≥a logo v√† h√¨nh ·∫£nh b√™n ph·∫£i
logo_html = img_to_html('logo.png', width="100px", height="100px")  # Thay ƒë∆∞·ªùng d·∫´n n√†y b·∫±ng logo c·ªßa b·∫°n
right_image_html = img_to_html('anhbiamun.png', width="250px", height="230px")  # Thay ƒë∆∞·ªùng d·∫´n b·∫±ng ·∫£nh kh√°c
bia_html1 = img_to_html('bia1.png', width="1306px", height="540px") 


css_code = """
    <style>
    body {
        font-family: 'Arial', sans-serif;
    }
    .navbar {
        display: flex;
        justify-content: space-between;
        background-color: #ffffff;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
    }
    .navbar a {
        text-decoration: none;
        color:  #FF8343;
        padding: 8px 16px;
        margin-top: 28px;
        font-size: 16px;
        font-weight: bold;
    }
    .navbar a:hover {
        color:  #FF8343;
        text-decoration: underline;
    }
    .logo {
        padding: 1px;
        margin-bottom: 50px;
    }
    .hero {
        background:  #FEEFDB;
        height: 300px;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        color: black;
        margin-bottom: 80px;
        padding: 180px;
    }
    .hero h1 {
        font-size: 48px;
        margin-bottom: 20px;
    }
    .hero p {
        font-size: 18px;
        color: #6F514A;
    }
    .download-btn {
        background-color: #FF8343;
        color: white;
        border: none;
        padding: 12px 24px;
        font-size: 18px;
        border-radius: 5px;
        cursor: pointer;
        margin-top: 20px;
        margin-left: 25px;
    }
    .download-btn:hover {
        background-color: linear-gradient(174.6deg, rgb(252, 200, 191) 11.8%, rgb(254, 159, 160) 89.9%);
    }
    </style>
"""

# Ch√®n CSS v√†o Streamlit
st.markdown(css_code, unsafe_allow_html=True)

# st.markdown("""
#     <script>
#     document.addEventListener('DOMContentLoaded', function() {
#         document.querySelector('.download-btn').onclick = function() {
#             window.location.href = "/?page=trainghiem";
#         };
#     });
#     </script>
# """, unsafe_allow_html=True)

# Thanh ƒëi·ªÅu h∆∞·ªõng v√† hero section
st.markdown(f"""
    <div class="navbar">
        <div class="logo">
            {logo_html}
        </div>
        <div>
            <a href="#home">Home</a>
            <a href="#about">Tr·∫£i nghi·ªám Derm Insight</a>
            <a href="#services">About us</a>
            <a href="#projects">V·∫•n ƒë·ªÅ da li·ªÖu</a>
        </div>
    </div>

    <div class="hero" id="home">
        {bia_html1}
    </div>
""", unsafe_allow_html=True)
# <button class="download-btn" >TH·ª¨ NGAY</button>

st.markdown("""
    <style>
        .breadcrumb-nav {
            display: flex;
            margin-bottom: 1px;
        }
        
        .breadcrumb-nav ol {
            display: inline-flex;
            align-items: center;
            gap: 4px;
        }
        
        .breadcrumb-nav li {
            display: inline-flex;
            align-items: center;
            font-size: 0.875rem;
            color: #4A5568;
            font-weight: 600;
        }

        .breadcrumb-nav li a {
            color: #4A5568;
            text-decoration: none;
        }

        .breadcrumb-nav li a:hover {
            color: #FF8343;
        }

        .breadcrumb-nav .icon {
            width: 12px;
            height: 12px;
            margin-right: 4px;
            fill: currentColor;
        }

        .breadcrumb-divider {
            color: #A0AEC0;
            margin-left: 4px;
        }

        .page-title {
            margin-bottom: 5px;
            font-size: 1.875rem;
            font-weight: 800;
            color: #1A202C;
        }

        .breadcrumb-nav li .current {
            color: #718096;
            
        }
    </style>
    """, unsafe_allow_html=True)

    # HTML structure
st.markdown("""
        <nav class="breadcrumb-nav" aria-label="Breadcrumb">
        <ol>
            <li>
            <a href="http://localhost:8501/Home" class="home-link">
                <svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
                <path d="m19.707 9.293-2-2-7-7a1 1 0 0 0-1.414 0l-7 7-2 2a1 1 0 0 0 1.414 1.414L2 10.414V18a2 2 0 0 0 2 2h3a1 1 0 0 0 1-1v-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v4a1 1 0 0 0 1 1h3a2 2 0 0 0 2-2v-7.586l.293.293a1 1 0 0 0 1.414-1.414Z"/>
                </svg>
                Home
            </a>
            </li>
            <span class="breadcrumb-divider">/</span>
            <li>
            <a href="http://localhost:8501/Derminsight" class="current">Tr·∫£i nghi·ªám Derm Insight</a>
            </li>
        </ol>
        </nav>

    """, unsafe_allow_html=True)


header_html = """
<h1 class="text-3xl font-extrabold text-gray-900 dark:text-white md:text-5xl lg:text-6xl">
    <span style="background: linear-gradient(to right, #ff6b3b, #ff914d); -webkit-background-clip: text; -webkit-text-fill-color: transparent; margin-top: 35px;">
        TR·∫¢I NGHI·ªÜM DERM INSIGHT
    </span>
</h1>
    """
st.markdown(header_html, unsafe_allow_html=True)


def img_to_base64(path):
        with open(path, "rb") as img_file:
            return base64.b64encode(img_file.read()).decode("utf-8")

cachdung_base64 = img_to_base64('cachsudung.png')
cachdung_html = f'<img src="data:image/png;base64,{cachdung_base64}" style="width:100%; height:auto; border-radius: 5px;"/>'

st.markdown(f"""
    <div style="background-color: #f4f4f4; padding: 35px 60px; border-radius: 8px; text-align: center; max-width: 700px; margin: 0 auto; margin-bottom: 55px;">
        <h2 style="font-size: 25px;font-weight: bold; color:  #ed5b2d; margin-bottom: 20px;">C√°ch s·ª≠ d·ª•ng DERM INSIGHT</h2>
        <div style="width: 100%; height: 89%; border-radius: 8px;">
        {cachdung_html}
        </div>
    </div>
""", unsafe_allow_html=True)

@st.cache_resource
def load_trained_model():
        model = load_model('ResNet152_26102024.h5')  # Thay th·∫ø b·∫±ng ƒë∆∞·ªùng d·∫´n ƒë·∫øn m√¥ h√¨nh c·ªßa b·∫°n
        return model

    # Function to preprocess the image
def preprocess_image(image):
        # Resize image to (256, 192) as required by your model
        image = np.array(image)
        image = cv2.resize(image, (256, 192))  # Ch√∫ √Ω ƒë·ªïi th·ª© t·ª± k√≠ch th∆∞·ªõc
        image = image / 255.0  # Normalize to [0, 1]
        image = np.expand_dims(image, axis=0)  # Add batch dimension
        return image

    # Function to predict skin disease
def predict_image(image, model, threshold=0.5):
        processed_image = preprocess_image(image)
        
        # Make prediction using the model
        predictions = model.predict(processed_image)
        
        # Assuming the model outputs probabilities for 4 classes
        classes = ['ak', 'av', 'ez', 'ps', 'unknown']
        
        predicted_class = np.argmax(predictions, axis=1)
        max_probability = np.max(predictions)  # L·∫•y x√°c su·∫•t cao nh·∫•t
        
        # N·∫øu x√°c su·∫•t cao nh·∫•t d∆∞·ªõi ng∆∞·ª°ng, tr·∫£ v·ªÅ "unknown"
        if max_probability < threshold:
            return 'unknown', predictions
        else:
            return classes[predicted_class[0]], predictions


st.subheader("H√£y t·∫£i h√¨nh ·∫£nh c·ªßa b·∫°n")
st.write("*L∆∞u √Ω:*")
st.write("1. H√£y ch·ª•p trong ƒëi·ªÅu ki·ªán √°nh s√°ng t·ªët")
st.write("2. Tr√°nh √°nh s√°ng qu√° m·∫°nh ho·∫∑c qu√° t·ªëi ƒë·ªÉ kh√¥ng ·∫£nh h∆∞·ªüng ƒë·∫øn k·∫øt qu·∫£ ph√¢n t√≠ch da c·ªßa b·∫°n")
st.write("3. ƒê·∫£m b·∫£o h√¨nh ·∫£nh ƒë∆∞·ª£c hi·ªÉn th·ªã r√µ r√†ng v√† kh√¥ng b·ªã che khu·∫•t")


    # Function to display results after prediction
def Hoantat():
        st.divider()
        header_html = """
        <h1 class="mb-4 text-3xl font-extrabold text-gray-900 dark:text-white md:text-5xl lg:text-6xl">
            <span style="background: linear-gradient(to right, #ff7e5f, #feb47b); -webkit-background-clip: text; -webkit-text-fill-color: transparent; margin-top: 35px;">K·∫æT QU·∫¢</span>
        """
        st.markdown(header_html, unsafe_allow_html=True)
        
        # Load model and make prediction
        model = load_trained_model()
        prediction, predictions = predict_image(image, model)
        

        with st.container():
            col1, col2, col3 = st.columns([0.4, 0.1, 0.5])

            with col1:
                st.image(image, use_column_width=True)

            with col2:
                st.write("")
            
            with col3:
                st.subheader("T√¨nh tr·∫°ng da")
                if prediction == 'unknown':
                    st.write("Kh√¥ng ph√°t hi·ªán v√πng b·ªánh c·∫ßn ch·∫©n ƒëo√°n.")
                else:
                    # st.write("- Prediction: **[{}]({})**".format(prediction.upper(), prediction))
                    # st.write("X√°c su·∫•t d·ª± ƒëo√°n: ", predictions)
                    if prediction == 'av':  # N·∫øu d·ª± ƒëo√°n l√† "av"
                        
                        # Hi·ªÉn th·ªã th√¥ng tin b·ªánh
                        st.write("- K·∫øt qu·∫£ d·ª± ƒëo√°n:")

                        ketquabenh = """ 
                            <p style="font-size: 22px;font-weight: bold; color: #e65410; margin-left: 30px;">M·ª•n tr·ª©ng c√° n·∫∑ng (Acne Vulgaris)</p>
                        """
                        st.markdown(ketquabenh, unsafe_allow_html=True)
                        st.write("")
                        with st.popover("T√åM HI·ªÇU NGAY"):
                            st.write("")
                            st.markdown(
                            """ 
                            <p style="font-size: 25px; color: #e65410; font-weight: bold; margin-bottom: 13px">B·∫†N C√ì BI·∫æT ‚ÅâÔ∏è</p>
                            <p style="font-size: 16px; margin-bottom: 10px">M·ª•n tr·ª©ng c√° n·∫∑ng, hay c√≤n g·ªçi l√† Acne Vulgaris, l√† m·ªôt t√¨nh tr·∫°ng da ph·ªï bi·∫øn, th∆∞·ªùng xu·∫•t hi·ªán trong tu·ªïi d·∫≠y th√¨ nh∆∞ng c≈©ng c√≥ th·ªÉ x·∫£y ra ·ªü ng∆∞·ªùi l·ªõn. ƒê√¢y l√† m·ªôt d·∫°ng m·ª•n tr·ª©ng c√° nghi√™m tr·ªçng, th∆∞·ªùng g√¢y ra c√°c n·ªët m·ª•n l·ªõn, s∆∞ng ƒë·ªè v√† ƒëau ƒë·ªõn. M·ª•n tr·ª©ng c√° n·∫∑ng c√≥ th·ªÉ ƒë·ªÉ l·∫°i s·∫πo v√† c√°c d·∫•u hi·ªáu tr√™n da, ·∫£nh h∆∞·ªüng ƒë·∫øn t√¢m l√Ω v√† ch·∫•t l∆∞·ª£ng cu·ªôc s·ªëng c·ªßa ng∆∞·ªùi m·∫Øc ph·∫£i.</p>
                            <a class="Link" href="http://localhost:8501/muntrungca" style="font-size: 16px;">TH√îNG TIN CHI TI·∫æT ü´µüèª</a>
                            """
                            , unsafe_allow_html=True)

                            st.write("")
                            st.write("")


                        st.write("")
                        st.subheader("L·ªùi khuy√™n")
                        st.write("- ƒêi·ªÅu tr·ªã m·ª•n b·∫±ng Benzoyl Peroxide, Salicylic Acid, Retinoids, Acid Azelaic, v√† Niacinamide.")
                        st.write("- ƒêi kh√°m b√°c sƒ© n·∫øu m·ª•n n·∫∑ng, lan r·ªông ho·∫∑c kh√¥ng c·∫£i thi·ªán sau 3-4 th√°ng t·ª± ƒëi·ªÅu tr·ªã.")
                        st.write("- ChƒÉm s√≥c da: r·ª≠a m·∫∑t ƒë√∫ng c√°ch, d∆∞·ª°ng ·∫©m, d√πng kem ch·ªëng n·∫Øng, tr√°nh s·ªù m·∫∑t.")
                        st.write("- Thay ƒë·ªïi ch·∫ø ƒë·ªô ƒÉn u·ªëng, gi·∫£m ƒë∆∞·ªùng, d·∫ßu m·ª°, s·ªØa ƒë·ªông v·∫≠t.")
                    
                    elif prediction == 'ak':  # D√†y s·ª´ng quang h√≥a (Actinic Keratosis)
                        st.write("- K·∫øt qu·∫£ d·ª± ƒëo√°n:")

                        ketquabenh = """ 
                            <p style="font-size: 22px;font-weight: bold; color: #e65410; margin-left: 30px;">D√†y s·ª´ng quang h√≥a (Actinic Keratosis)</p>
                        """
                        st.markdown(ketquabenh, unsafe_allow_html=True)
                        st.write("")

                        with st.popover("T√åM HI·ªÇU NGAY"):
                            st.write("")
                            st.markdown(
                            """ 
                            <p style="font-size: 25px; color: #e65410; font-weight: bold; margin-bottom: 13px">B·∫†N C√ì BI·∫æT ‚ÅâÔ∏è</p>
                            <p style="font-size: 16px; margin-bottom: 10px">Actinic Keratosis l√† m·ªôt b·ªánh ngo√†i da ph·ªï bi·∫øn ·∫£nh h∆∞·ªüng ƒë·∫øn nhi·ªÅu ng∆∞·ªùi. N√≥ ph√°t sinh do da ti·∫øp x√∫c k√©o d√†i v·ªõi √°nh s√°ng m·∫∑t tr·ªùi ho·∫∑c tia c·ª±c t√≠m. C√°c m·∫£ng ho·∫∑c t·ªïn th∆∞∆°ng th√¥ r√°p c√≥ v·∫£y tr√™n da l√† ƒë·∫∑c ƒëi·ªÉm c·ªßa t·ªïn th∆∞∆°ng c·ªßa b·ªánh. C√°c y·∫øu t·ªë d·ªÖ b·ªã t·ªïn th∆∞∆°ng th∆∞·ªùng ƒë∆∞·ª£c coi l√† tri·ªáu ch·ª©ng ti·ªÅn ung th∆∞. N·∫øu kh√¥ng ƒë∆∞·ª£c ph√°t hi·ªán s·ªõm v√† ƒëi·ªÅu tr·ªã k·ªãp th·ªùi c√≥ th·ªÉ d·∫´n ƒë·∫øn ung th∆∞ da t·∫ø b√†o v·∫£y.</p>
                            <a class="Link" href="http://localhost:8501/benhdaysung" style="font-size: 16px;">TH√îNG TIN CHI TI·∫æT ü´µüèª</a>
                            """
                            , unsafe_allow_html=True)

                            st.write("")
                            st.write("")

                        st.write("")
                        st.subheader("L·ªùi khuy√™n")
                        st.write("- S·ª≠ d·ª•ng thu·ªëc m·ª° ch·ª©a Fluorouracil ho·∫∑c Imiquimod theo ch·ªâ ƒë·ªãnh c·ªßa b√°c sƒ©.")
                        st.write("- Tr√°nh ti·∫øp x√∫c √°nh n·∫Øng m·∫∑t tr·ªùi v√† d√πng kem ch·ªëng n·∫Øng c√≥ ch·ªâ s·ªë SPF cao.")
                        st.write("- Kh√°m b√°c sƒ© ƒë·ªÉ theo d√µi v√† ƒëi·ªÅu tr·ªã s·ªõm n·∫øu c√≥ bi·∫øn ƒë·ªïi b·∫•t th∆∞·ªùng tr√™n da.")
                    
                    elif prediction == 'ez':  # Ch√†m (Eczema)
                        st.write("- K·∫øt qu·∫£ d·ª± ƒëo√°n:")

                        ketquabenh = """ 
                            <p style="font-size: 20px;font-weight: bold; color: #e65410; margin-left: 30px;">Ch√†m (Eczema)</p>
                        """
                        st.markdown(ketquabenh, unsafe_allow_html=True)
                        st.write("")

                        with st.popover("T√åM HI·ªÇU NGAY"):
                            st.write("")
                            st.markdown(
                            """ 
                            <p style="font-size: 25px; color: #e65410; font-weight: bold; margin-bottom: 13px">B·∫†N C√ì BI·∫æT ‚ÅâÔ∏è</p>
                            <p style="font-size: 16px; margin-bottom: 10px">B·ªánh ch√†m l√† t√™n chung c·ªßa m·ªôt nh√≥m b·ªánh vi√™m da ƒë·∫∑c tr∆∞ng b·ªüi da kh√¥, bong v·∫£y, ng·ª©a, ph·ªìng r·ªôp, ph√°t ban v√† nhi·ªÖm tr√πng. Ng·ª©a da l√† bi·ªÉu hi·ªán ph·ªï bi·∫øn nh·∫•t c·ªßa b·ªánh ch√†m. C√≥ b·∫£y lo·∫°i b·ªánh ch√†m: vi√™m da d·ªã ·ª©ng, vi√™m da ti·∫øp x√∫c, ch√†m t·ªï ƒë·ªâa, ch√†m ƒë·ªìng ti·ªÅn, vi√™m da ti·∫øt b√£ v√† vi√™m da ·ª© ƒë·ªçng. N·∫øu b·ªánh ch√†m kh√¥ng ƒë∆∞·ª£c ƒëi·ªÅu tr·ªã k·ªãp th·ªùi s·∫Ω d·ªÖ ph√°t tri·ªÉn th√†nh c√°c ƒë·ª£t b√πng ph√°t n·∫∑ng k√®m theo c√°c bi·∫øn ch·ª©ng nguy hi·ªÉm kh√°c k√©o d√†i nhi·ªÅu ng√†y ho·∫∑c nhi·ªÅu tu·∫ßn. ƒê√¥i khi, b·ªánh ch√†m d·ªÖ b·ªã nh·∫ßm l·∫´n v·ªõi c√°c b·ªánh ngo√†i da kh√°c c√≥ tri·ªáu ch·ª©ng t∆∞∆°ng t·ª± b·ªánh v·∫©y n·∫øn.</p>
                            <a class="Link" href="http://localhost:8501/benhcham" style="font-size: 16px;">TH√îNG TIN CHI TI·∫æT ü´µüèª</a>
                            """
                            , unsafe_allow_html=True)

                            st.write("")
                            st.write("")

                        st.write("")
                        st.subheader("L·ªùi khuy√™n")
                        st.write("- S·ª≠ d·ª•ng kem d∆∞·ª°ng ·∫©m h√†ng ng√†y, ƒë·∫∑c bi·ªát l√† sau khi t·∫Øm.")
                        st.write("- Tr√°nh s·ª≠ d·ª•ng c√°c s·∫£n ph·∫©m g√¢y k√≠ch ·ª©ng v√† n∆∞·ªõc n√≥ng.")
                        st.write("- N·∫øu ng·ª©a ho·∫∑c vi√™m, c√≥ th·ªÉ s·ª≠ d·ª•ng kem corticosteroid theo h∆∞·ªõng d·∫´n b√°c sƒ©.")
                    
                    elif prediction == 'ps':  # V·∫©y n·∫øn (Psoriasis)
                        st.write("- K·∫øt qu·∫£ d·ª± ƒëo√°n:")

                        ketquabenh = """ 
                            <p style="font-size: 20px;font-weight: bold; color: #e65410; margin-left: 30px;">V·∫©y n·∫øn (Psoriasis)</p>
                        """
                        st.markdown(ketquabenh, unsafe_allow_html=True)
                        st.write("")

                        with st.popover("T√åM HI·ªÇU NGAY"):
                            st.write("")
                            st.markdown(
                            """ 
                            <p style="font-size: 25px; color: #e65410; font-weight: bold; margin-bottom: 13px">B·∫†N C√ì BI·∫æT ‚ÅâÔ∏è</p>
                            <p style="font-size: 16px; margin-bottom: 10px">B·ªánh v·∫©y n·∫øn l√† m·ªôt b·ªánh vi√™m da m√£n t√≠nh kh√¥ng r√µ ngu·ªìn g·ªëc ho·∫∑c kh√¥ng r√µ ngu·ªìn g·ªëc. C√°c nh√† khoa h·ªçc cho r·∫±ng n√≥ li√™n quan ƒë·∫øn y·∫øu t·ªë m√¥i tr∆∞·ªùng v√† di truy·ªÅn. H·ªá th·ªëng mi·ªÖn d·ªãch ho·∫°t ƒë·ªông qu√° m·ª©c khi·∫øn t·∫ø b√†o tƒÉng sinh nhanh ch√≥ng, d·∫´n ƒë·∫øn h√¨nh th√†nh c√°c m·∫£ng v·∫£y. H·ªá th·ªëng mi·ªÖn d·ªãch c·ªßa c∆° th·ªÉ ho·∫°t ƒë·ªông qu√° m·ª©c, khi·∫øn t·∫ø b√†o nh√¢n l√™n nhanh ch√≥ng v√† h√¨nh th√†nh v·∫£y. C√°c ƒë·∫∑c ƒëi·ªÉm c∆° b·∫£n c·ªßa b·ªánh v·∫©y n·∫øn bao g·ªìm da c√≥ v·∫£y v√† vi√™m da. B·ªánh x·∫£y ra ·ªü h·∫ßu h·∫øt c√°c b·ªô ph·∫≠n tr√™n c∆° th·ªÉ nh∆∞ng th∆∞·ªùng g·∫∑p ·ªü da ƒë·∫ßu, khu·ª∑u tay v√† ƒë·∫ßu g·ªëi.</p>
                            <a class="Link" href="http://localhost:8501/benhvaynen" style="font-size: 16px;">TH√îNG TIN CHI TI·∫æT ü´µüèª</a>
                            """
                            ,unsafe_allow_html=True)

                            st.write("")
                            st.write("")

                        st.write("")
                        st.subheader("L·ªùi khuy√™n")
                        st.write("- S·ª≠ d·ª•ng kem d∆∞·ª°ng ·∫©m v√† thu·ªëc ch·ª©a Salicylic Acid ho·∫∑c corticosteroid.")
                        st.write("- Tr√°nh cƒÉng th·∫≥ng, b·∫£o v·ªá da kh·ªèi t·ªïn th∆∞∆°ng v√† duy tr√¨ l·ªëi s·ªëng l√†nh m·∫°nh.")
                        st.write("- Tham kh·∫£o b√°c sƒ© da li·ªÖu ƒë·ªÉ c√≥ ph∆∞∆°ng ph√°p ƒëi·ªÅu tr·ªã ph√π h·ª£p n·∫øu t√¨nh tr·∫°ng tr·ªü n·∫∑ng.")
                    else:
                        st.write("Kh√¥ng c√≥ khuy·∫øn ngh·ªã c·ª• th·ªÉ cho t√¨nh tr·∫°ng da c·ªßa b·∫°n.")
        st.write("")
        button_back = st.button("QUAY L·∫†I", type="primary")
        if button_back:
            st.session_state.page = "main"
            
        # if st.button("Ph√¢n t√≠ch ·∫£nh kh√°c"):
        #     st.session_state.clear()  # X√≥a t·∫•t c·∫£ d·ªØ li·ªáu trong session state
        #     trainghiem()  
        #     st.session_state.page = "trainghiem"


    # H√†m t√≠nh ƒë·ªô s·∫Øc n√©t c·ªßa ·∫£nh s·ª≠ d·ª•ng bi·∫øn ƒë·ªïi Laplacian
def calculate_image_sharpness(image):
        # Chuy·ªÉn ·∫£nh t·ª´ PIL sang OpenCV
        image_cv = np.array(image.convert('L'))  # Chuy·ªÉn sang ·∫£nh x√°m (grayscale)
        
        # T√≠nh bi·∫øn ƒë·ªïi Laplacian
        laplacian = cv2.Laplacian(image_cv, cv2.CV_64F)
        
        # T√≠nh ƒë·ªô s·∫Øc n√©t d·ª±a tr√™n ph∆∞∆°ng sai c·ªßa Laplacian
        sharpness = laplacian.var()
        
        return sharpness

    # H√†m ki·ªÉm tra ch·∫•t l∆∞·ª£ng ·∫£nh d·ª±a tr√™n ƒë·ªô s·∫Øc n√©t
def check_image_quality(image, threshold=100):
        sharpness = calculate_image_sharpness(image)
        
        # Ki·ªÉm tra n·∫øu ƒë·ªô s·∫Øc n√©t v∆∞·ª£t qua ng∆∞·ª°ng cho tr∆∞·ªõc
        if sharpness >= threshold:
            return True
        return False

st.write("")
uploaded_file = st.file_uploader("Ch·ªçn ·∫£nh", type=["png", "jpg", "jpeg"])


if uploaded_file is not None:
        col1, col2, col3= st.columns([0.2,0.6,0.2])
        with col1:
            st.write("")
        with col2:
            image = Image.open(uploaded_file).convert("RGB")
            st.image(image, use_column_width=True) 

        with col3:
            st.write("")
    
        if check_image_quality(image):
            st.markdown(
                """
             <div style="
                border: 1px solid rgba(255, 165, 0, 0.46);
                background-color: rgba(255, 165, 0, 0.12);
                box-shadow: 0px 0px 2px #FFA500;
                color: #FF8C00;
                padding: 10px;
                border-radius: 5px;
                font-family: 'Montserrat', sans-serif;
                font-size: 16px;
                font-weight: light;
                text-align: left;
                width: 60%;
                margin: 0 auto;
                margin-bottom: 10px;
            ">
                <i class="far fa-check-circle" style="margin-right: 5px; color: #FFA500;"></i>
                <strong>·∫¢nh t·∫£i l√™n r√µ n√©t</strong> !
            </div>
                """, 
                unsafe_allow_html=True
            )
            
            button_hoantat = st.button("HO√ÄN T·∫§T", type="primary")
            if button_hoantat:
                Hoantat()
        else:
            st.markdown(
                """
                <div style="
                    border: 1px solid rgba(241, 6, 6, 0.81);
                    background-color: rgba(220, 17, 1, 0.16);
                    box-shadow: 0px 0px 2px #ff0303;
                    color: #ff0303;
                    padding: 10px;
                    border-radius: 5px;
                    font-family: 'Montserrat', sans-serif;
                    font-size: 16px;
                    font-weight: light;
                    text-align: center;
                    width: 60%;
                    margin: 0 auto;
                    margin-bottom: 10px;
                ">
                    <i class="far fa-times-circle" style="margin-right: 5px; color: #ff0303;"></i>
                    <strong>·∫¢nh ch∆∞a ƒë·ªß r√µ n√©t.</strong> Vui l√≤ng t·∫£i l·∫°i ·∫£nh s·∫Øc n√©t h∆°n
                </div>
                """, 
                unsafe_allow_html=True
            )

st.write("")
st.write("")
if st.button("< BACK"):
        st.switch_page("pages/Home.py")



# # CSS cho ph·∫ßn footer
# footer_css = """
#     <style>
#     .footer {
#         background-color: white;  
#         color: white;
#         padding: 1px ;
#         text-align: center;
#     }
#     .footer .container {
#         display: flex;
#         flex-direction: column;
#         justify-content: center;
#         align-items: center;
#     }
#     .footer-icons a {
#         margin-top: 1px;
#         margin-bottom: 10px;
#         color: #FF8343;
#         padding: 3px;  /* Gi·∫£m k√≠ch th∆∞·ªõc padding ƒë·ªÉ icon nh·ªè h∆°n */
#         border-radius: 50%;
#         font-size: 17px;  /* Gi·∫£m font-size ƒë·ªÉ icon nh·ªè h∆°n */
#         display: inline-block;
#         text-decoration: none;
#     }
#     .footer-icons a:hover {
#         color: #343a40;  /* M√†u khi hover */
#     }
#     .footer-bottom {
#         background-color: #FFEADF;
#         padding: 10px;
#         width: 100%;
#         text-align: center;
#         font-size: 14px;
#         color: #503C37;;
#         font-weight: bold;
#     }
#     .footer-bottom a {
#         color: #503C37;
#         text-decoration: none;
#     }
#     </style>
# """

# # Th√™m CSS v√†o ·ª©ng d·ª•ng
# st.markdown(footer_css, unsafe_allow_html=True)

# # HTML cho footer
# footer_html = """
# <div class="footer">
#     <div class="footer-bottom">
#         ¬© 2024 Copyright:
#         <a>Derminsight.team@gmail.com</a>
#     </div>
#     <div class="container">
#         <div class="footer-icons">
#             <a href="#!" role="button"><i class="fab fa-facebook-f"></i></a>
#             <a href="#!" role="button"><i class="fab fa-twitter"></i></a>
#             <a href="#!" role="button"><i class="fab fa-google"></i></a>
#             <a href="#!" role="button"><i class="fab fa-instagram"></i></a>
#             <a href="#!" role="button"><i class="fab fa-linkedin-in"></i></a>
#             <a href="#!" role="button"><i class="fab fa-github"></i></a>
#         </div>
#     </div>
# </div>
# """

# # Th√™m HTML v√†o ·ª©ng d·ª•ng
# st.markdown(footer_html, unsafe_allow_html=True)

# # Th√™m link t·ªõi Font Awesome ƒë·ªÉ hi·ªÉn th·ªã icon
# st.write('<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css"/>', unsafe_allow_html=True)


footer_css = """
    <style>
    .footer {
        background-color: #FF8343;  /* M√†u n·ªÅn cam */
        color: white;
        padding: 10px;
        text-align: center;
    }
    .footer .container {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }
    .footer-icons a {
        margin: 5px;
        color: black;
        border: 1px solid white;
        padding: 8px;  /* Gi·∫£m k√≠ch th∆∞·ªõc padding ƒë·ªÉ icon nh·ªè h∆°n */
        border-radius: 50%;
        font-size: 16px;  /* Gi·∫£m font-size ƒë·ªÉ icon nh·ªè h∆°n */
        display: inline-block;
        text-decoration: none;
    }
    .footer-icons a:hover {
        color: #343a40;  /* M√†u khi hover */
    }
"""

# Th√™m CSS v√†o ·ª©ng d·ª•ng
st.markdown(footer_css, unsafe_allow_html=True)




# # Th√™m ph·∫ßn Footer
# st.markdown("""
# <style>
# @import url(https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400);
# body {
#   font-family: 'Source Sans Pro', sans-serif;
#   font-weight: 300;
#   background-color: lightblue;
#   color: white;
# }
# .footer #button { 
#   width: 35px;
#   height: 35px;
#   border: #FF8343 12px solid;
#   border-radius: 35px;
#   margin: 0 auto;
#   position: relative;
#   transition: all 1s ease;
# }
# .footer #button:hover {
#   border: #3A3A3A 12px solid;
# }
# .footer {
#   bottom: 0;
#   left: 0;
#   position: fixed;
#   width: 100%;
#   height: 100px;
#   overflow: hidden;
#   margin: 0 auto;
#   transition: all 1s ease;
#   z-index: 999;
# }
# .footer:hover {
#   height: 100px;
# }
# .footer #container {
#   margin-top: 5px;
#   width: 100%;
#   height: 100%;
#   position: relative;
#   top: 0;
#   left: 0;
#   background: #FF8343;
# }
# .footer #cont {
#   position: relative;
#   top: -60px;
#   right: 190px;
#   width: 150px;
#   height: auto;
#   margin: 0 auto;
# }
# .footer_center {
#   width: 500px;
#   float: left;
#   text-align: center;
# }
# .footer h3 {
#   font-family: 'Helvetica';
#   font-size: 30px;
#   font-weight: bold;
#   margin-top: 70px;
#     color: white;
#   margin-left: 40px;
# }
# </style>

# <div class="footer">
#   <div id="button"></div>
#   <div id="container">
#     <div id="cont">
#       <div class="footer_center">
#         <h3>WELCOME TO DERM INSIGHT</h3>
#       </div>
#     </div>
#   </div>
# </div>
# """, unsafe_allow_html=True)

def img_to_html(img_path, width="00px", height="80px"):
    img_html = f"<img src='data:image/png;base64,{img_to_bytes(img_path)}' style='width:{width}; height:{height};'>"
    return img_html

# S·ª≠ d·ª•ng h√†m img_to_html ƒë·ªÉ m√£ h√≥a logo v√† h√¨nh ·∫£nh b√™n ph·∫£i
logo_html = img_to_html('logo.png', width="200px", height="200px")  # Thay ƒë∆∞·ªùng d·∫´n n√†y b·∫±ng logo c·ªßa b·∫°n


# Ph·∫ßn CSS
css_code = """
    <style>
    .footer {
        background-color: #f8f9fa;
        padding: 25px ;
        border-top: 1px solid #e9ecef;
        font-family: 'Arial', sans-serif;
    
    }
    .footer h4 {
        margin-left: 40x;
        font-size: 18px;
        color: #6c757d;

    }
    .footer .fix {
        margin-left: 60px;
        font-size: 18px;
        color: #6c757d;

    }

    .footer p, .footer address, .footer a {
        color: #6c757d;
        text-decoration: none;
        font-size: 16px;
        margin-right: 20px;
    }
    .footer a:hover {
        color:  #FF8343;
        text-decoration: underline;
    }
    .footer .widget-section {
        display: flex;
        flex-wrap: wrap;
        gap: 5px;
        justify-content: space-between;
    }
    .footer .widget-section div {
        flex: 1;
        max-width: 600px;
    }
  
    .footer form input[type="email"] {
        width: 100%;
        padding: 0.5rem;
        margin-top: 10px;
        margin-bottom: 15px;
        border: 1px solid #ced4da;
        border-radius: 4px;
    }
    .footer form button {
        width: 100%;
        padding: 0.5rem;
        background-color: #FF8343;
        color: #fff;
        border: none;
        border-radius: 4px;
    }
     .footer-bottom {
        background-color: rgba(0, 0, 0, 0.2);
        padding: 15px;
        width: 100%;
        text-align: center;
        font-size: 14px;
        color: white;
        font-weight: bold;
        margin: 5px;
    
    }
    .footer-bottom a {
        color: #6c757d;
        text-decoration: none;
        font-weight: bold;
    }
    </style>
"""

# Ch√®n CSS v√†o Streamlit
st.markdown(css_code, unsafe_allow_html=True)

# Ph·∫ßn HTML
st.markdown(f"""
<footer class="footer">
  <section class="widget-section">
    <div >
      {logo_html}
    </div>
    <div>
      <h4>Get in Touch</h4>
      <address> 232/6 Vo Thi Sau Street, Ward 7, District 3, Ho Chi Minh City, Vietnam</address>
      <p><a href="tel:+84123456789">0123 456 789</a></p>
      <p><a href="mailto:derminsight.team@gmail.com">derminsight.team@gmail.com</a></p>
    </div>
    <div>
      <h4 class="fix">Learn More</h4>
      <ul style="list-style-type: none; padding-left: 0;">
        <li><a href="#!">About</a></li>
        <li><a href="#!">Contact</a></li>
        <li><a href="#!">Advertise</a></li>
        <li><a href="#!">Terms of Service</a></li>
        <li><a href="#!">Privacy Policy</a></li>
      </ul>
    </div>
    <div>
      <h4>Our Newsletter</h4>
      <p>Subscribe to our newsletter to get our news & discounts delivered to you.</p>
      <form action="#!">
        <input type="email" placeholder="Email Address" required>
        <button type="submit">Subscribe</button>
      </form>
    </div>
  </section>
  <div class="container">
        <div class="footer-icons">
            <a href="#!" role="button"><i class="fab fa-facebook-f"></i></a>
            <a href="#!" role="button"><i class="fab fa-twitter"></i></a>
            <a href="#!" role="button"><i class="fab fa-google"></i></a>
            <a href="#!" role="button"><i class="fab fa-instagram"></i></a>
            <a href="#!" role="button"><i class="fab fa-linkedin-in"></i></a>
            <a href="#!" role="button"><i class="fab fa-github"></i></a>
        </div>
    </div>
    <div class="footer-bottom">
        ¬© 2024 Copyright:
        <a>derminsight.team@gmail.com</a>
    </div>
</footer>
"""
,unsafe_allow_html=True)

